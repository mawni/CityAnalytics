{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["mapboxgl","accessToken","process","ScenarioButton","props","state","result","isActive","handleShow","setState","handleHide","doRequest","bind","axios","get","then","resp","console","log","data","JSON","stringify","this","onClick","name","Component","Map1","lng","lat","zoom","mapContainer","React","createRef","Map","container","current","style","center","class","ref","className","App","href","id","src","alt","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4SAOAA,IAASC,YAAcC,yF,IAOjBC,E,kDACJ,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IAKRC,MAAQ,CACNC,OAAQ,KACRC,UAAU,GARM,EAYlBC,WAAa,WACX,EAAKC,SAAS,CAACF,UAAU,KAbT,EAelBG,WAAa,WACX,EAAKD,SAAS,CAACF,UAAU,KAdzB,EAAKI,UAAY,EAAKA,UAAUC,KAAf,gBAFD,E,6CAmBlB,WAAY,IAAD,OAQTC,IAAMC,IAAI,8CAA8CC,MAAK,SAAAC,GAC3DC,QAAQC,IAAIF,EAAKG,MACjB,EAAKV,SAAS,CAACH,OAAOc,KAAKC,UAAUL,EAAKG,QAC1C,EAAKX,kB,oBAIT,WAEE,OAAIc,KAAKjB,MAAME,SAEX,gCACE,yBAAQgB,QAASD,KAAKZ,WAAtB,kBACQY,KAAKlB,MAAMoB,QAGnB,uBAEA,cAAC,EAAD,OAKF,8BACE,yBAAQD,QAASD,KAAKd,WAAtB,kBACQc,KAAKlB,MAAMoB,c,GArDAC,aA6DvBC,E,kDAEJ,WAAYtB,GAAO,IAAD,8BAEhB,cAAMA,IACDC,MAAQ,CACXsB,IAAK,UACLC,KAAM,UACNC,KAAM,MAGR,EAAKC,aAAeC,IAAMC,YATV,E,qDAYlB,WACE,MAA2BV,KAAKjB,MAAxBsB,EAAR,EAAQA,IAAKC,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,KACN,IAAI7B,IAASiC,IAAI,CAC7BC,UAAWZ,KAAKQ,aAAaK,QAC7BC,MAAO,kDAEPC,OAAQ,CAACV,EAAKC,GACdC,KAAMA,M,oBAIR,WACE,OACE,sBAAKS,MAAM,kBAAX,UACE,2GACA,qBAAKC,IAAKjB,KAAKQ,aAAcU,UAAU,yB,GA7B5Bf,aAuHJgB,MAnFf,WACE,OACE,+BACE,sBAAKD,UAAU,MAAf,UACE,8BAEE,sBAAKF,MAAM,SAAX,UACE,oBAAIA,MAAM,aAAV,qBACA,qBAAKA,MAAM,YAAX,SACE,+BAEE,6BAAI,mBAAGI,KAAK,QAAR,oBACJ,6BAAI,mBAAGA,KAAK,QAAR,oBACJ,6BAAI,mBAAGA,KAAK,WAAR,uBACJ,6BAAI,mBAAGA,KAAK,yCAAR,gCAKZ,uBACA,uBAAMF,UAAU,WAAhB,UACE,0BAASG,GAAG,OAAOL,MAAM,eAAzB,UAEE,qBAAKM,IAAI,eAAeC,IAAI,KAC5B,yEACA,uBACA,0CACA,uBACA,uCAGF,0BAASF,GAAG,OAAOL,MAAM,eAAzB,UAEE,yCACA,uBACA,qBAAKA,MAAM,oBAAX,SACE,+BACE,6CACA,6DACA,4BAAG,mBAAGI,KAAK,8BAAR,sBACH,4CACA,2DACA,yCACA,gEACA,uCACA,2DACA,8CACA,6DACA,4BAAG,mBAAGA,KAAK,2BAAR,8BAKT,0BAASC,GAAG,UAAUL,MAAM,kBAA5B,UAEE,yCACA,uBACA,0EACA,cAAC,EAAD,CAAgBd,KAAK,eACrB,uGACA,cAAC,EAAD,CAAgBA,KAAK,eACrB,uHACA,cAAC,EAAD,CAAgBA,KAAK,eACrB,qGACA,cAAC,EAAD,CAAgBA,KAAK,eACrB,mCCpKGsB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.0b0752cb.chunk.js","sourcesContent":["//import logo from './logo.svg';\r\nimport './App.css';\r\nimport React, {Component, useState, useRef, useEffect} from 'react'; //import to make component classes\r\nimport axios from 'axios'; //import to use axios package --> for http requests\r\n\r\nimport mapboxgl from '!mapbox-gl'; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport 'mapbox-gl/dist/mapbox-gl.css'; //mapbox\r\nmapboxgl.accessToken = process.env.REACT_APP_MAPBOX1;\r\n\r\n// function TestHeader(props){\r\n//   return <h1>{props.name}</h1>\r\n// }\r\n\r\n// This is for a button which when clicked, outputs info on a respective twitter analysis scenario\r\nclass ScenarioButton extends Component {\r\n  constructor(props){ //constructor\r\n    super(props);\r\n    this.doRequest = this.doRequest.bind(this);\r\n  }\r\n  \r\n  //state variables for the class\r\n  state = {\r\n    result: null, //result of the http GET request\r\n    isActive: false //boolean for status of whether button is active or inactive (to hide/show info)\r\n  };\r\n\r\n  //functions to change state of button of being on/off\r\n  handleShow = () => {\r\n    this.setState({isActive: true});\r\n  }\r\n  handleHide = () => {\r\n    this.setState({isActive: false})\r\n  }\r\n\r\n  doRequest(){\r\n    //this function executes when button being clicked\r\n    //alert('Hello there o7');\r\n\r\n    //https://attacomsian.com/blog/http-requests-axios \r\n    //requests with parameters. do axios.get(\"__url__\" + this.props.queryParam), then pass in the prop at instantiation\r\n\r\n    //axios.get is a promise that something will come back. then() captures received info and maps to state\r\n    axios.get(\"https://jsonplaceholder.typicode.com/users\").then(resp => {\r\n      console.log(resp.data);\r\n      this.setState({result:JSON.stringify(resp.data)});\r\n      this.handleShow();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    //renders content hidden within button depending on whether button is on/off (i.e. inactive/active)\r\n    if (this.state.isActive){\r\n      return (\r\n        <div>\r\n          <button onClick={this.handleHide}>\r\n            Hide {this.props.name}\r\n          </button>\r\n          {/* <p style={{fontSize : '10px'}}>{this.state.result}</p> */}\r\n          <br></br>\r\n          {/* this next line displays an entire MapBox component! */}\r\n          <Map1></Map1>\r\n        </div>\r\n      )\r\n    } else /* isActive == false */ {\r\n      return (\r\n        <div>\r\n          <button onClick={this.handleShow}>\r\n            Show {this.props.name}\r\n          </button>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nclass Map1 extends Component {\r\n\r\n  constructor(props){\r\n    //sets up the maps default state\r\n    super(props);\r\n    this.state = {\r\n      lng: 135.542630,\r\n      lat: -27.530812,\r\n      zoom: 3.89\r\n      // the current state values align with a centered view of Australia\r\n    };\r\n    this.mapContainer = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { lng, lat, zoom } = this.state;\r\n    const map = new mapboxgl.Map({\r\n    container: this.mapContainer.current,\r\n    style: 'mapbox://styles/mawni/ckp1cfea12pjg17pcze2jproe',\r\n    // mapbox://styles/mapbox/streets-v11\r\n    center: [lng, lat],\r\n    zoom: zoom\r\n    });\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <div class=\"map-box-wrapper\">\r\n        <p>MapBox - Please zoom in to view the Statistical Area Level 2 (SA2) Regions</p>\r\n        <div ref={this.mapContainer} className=\"map-container\" />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n//the function event for webpage\r\nfunction App() {\r\n  return (\r\n    <body>     \r\n      <div className=\"App\">\r\n        <nav>\r\n          {/* navbar at top of page */}\r\n          <div class=\"navbar\">\r\n            <h1 class=\"nav-header\">Team 55</h1>\r\n            <div class=\"nav-links\">\r\n              <ul>\r\n                {/* hrefs are IDs for the sections */}\r\n                <li><a href=\"#home\">Home</a></li>\r\n                <li><a href=\"#team\">Team</a></li>\r\n                <li><a href=\"#results\">Results</a></li>\r\n                <li><a href=\"https://github.com/mawni/CityAnalytics\">GitHub</a></li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </nav>\r\n        <br></br>\r\n        <main className=\"App-main\">\r\n          <section id=\"home\" class=\"home-section\">\r\n            {/* landing page of website */}\r\n            <img src=\"/twitter.png\" alt=\"\"></img>\r\n            <h1>COMP90024 Project 2 - Twitter Analytics</h1>\r\n            <br></br>\r\n            <h3>Welcome!</h3>\r\n            <br></br>\r\n            <p>~~~</p>\r\n          </section>\r\n\r\n          <section id=\"team\" class=\"team-section\">\r\n            {/* section for some info about the team */}\r\n            <h3>Team 55</h3>\r\n            <br></br>\r\n            <div class=\"team-list-wrapper\">\r\n              <ul>\r\n                <h4>Jin Kai Teh</h4>\r\n                <p>jteh3@student.unimelb.edu.au</p>\r\n                <p><a href=\"https://github.com/kaikai43\">GitHub</a></p>\r\n                <h4>Cheng Wang</h4>\r\n                <p>___@student.unimelb.edu.au</p>\r\n                <h4>Yingrui</h4>\r\n                <p>yingruiz@student.unimelb.edu.au</p>\r\n                <h4>Jacky</h4>\r\n                <p>___@student.unimelb.edu.au</p>\r\n                <h4>Mustafa Awni</h4>\r\n                <p>mawni@student.unimelb.edu.au</p>\r\n                <p><a href=\"https://github.com/mawni\">GitHub</a></p>\r\n              </ul>\r\n            </div>\r\n          </section>\r\n\r\n          <section id=\"results\" class=\"results-section\">\r\n            {/* section for the actual data of the project */}\r\n            <h3>Results</h3>\r\n            <br></br>\r\n            <p>Scenario 1 - Number of tweets in each SA2</p>\r\n            <ScenarioButton name=\"Scenario 1\"></ScenarioButton>\r\n            <p>Scenario 2 - Emotion scores based on the content of tweets in each SA2</p>\r\n            <ScenarioButton name=\"Scenario 2\"></ScenarioButton>\r\n            <p>Scenario 3 - Correlation between crime-related tweets and crime-related SA2 statistics</p>\r\n            <ScenarioButton name=\"Scenario 3\"></ScenarioButton>\r\n            <p>Scenario 4 - Average number of tweets per person in each SA2 region.</p>\r\n            <ScenarioButton name=\"Scenario 4\"></ScenarioButton>\r\n            <br></br>\r\n          </section>\r\n          \r\n          {/* <a\r\n            className=\"App-link\"\r\n            href=\"https://reactjs.org\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            Learn React\r\n          </a> */}\r\n        </main>\r\n        \r\n      </div>\r\n    </body>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}